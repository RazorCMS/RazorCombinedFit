import sys
import os

if __name__ == '__main__':

    if len(sys.argv) < 4:
        print "\nRun the script as follows:\n"
        print "python scripts/makeBluePlot.py BoxName ToyDir DataFile OutDir"
        print "with:"
        print "- BoxName = name of the Box (MuMu, MuEle, etc)"
        print "- ToyDir = directory with the .txt files generated by the fit"
        print "- DataFile = name of the corresponding data file"
        print "- OutDir = name of the output directory"
        sys.exit() 
    else:
        Box = sys.argv[1]
        ToyDir = sys.argv[2]
        Data = sys.argv[3]
        Label = sys.argv[4]

    plotOnly = False
    for i in range(5, len(sys.argv)):
        if sys.argv[i] == "--plotOnly": plotOnly = True

    if not plotOnly:
        os.system("python scripts/convertToyToROOT.py %s/frtoydata_%s" %(ToyDir, Box))
        os.system("python scripts/expectedYield_sigbin.py 1 expected_sigbin_%s.root %s %s/frtoydata_%s_*root"%(Box, Box, ToyDir, Box))
        os.system("python scripts/makeToyPVALUE_sigbin.py %s expected_sigbin_%s.root %s"%(Box, Box, Data))
        os.system("mkdir %s"%(Label))
        os.system("mv nSigma_%s.* pvalue_sigbin_%s.* pvalue_%s.root expected_sigbin_%s.root table_%s.tex %s"%(Box, Box, Box, Box, Box, Label))
    else:
        os.system("rm %s/pvalue_%s.root" %(Label,Box))
        os.system("python scripts/makeToyPVALUE_sigbin.py %s %s/expected_sigbin_%s.root %s"%(Box, Label, Box, Data))
        os.system("mv nSigma_%s.* pvalue_sigbin_%s.* pvalue_%s.root table_%s.tex %s"%(Box,Box, Box, Box, Label))

    # compile the latex table
    os.system("cd %s; pdflatex table_%s.tex" %(Label, Box))
